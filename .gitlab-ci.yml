image: docker:stable

variables:
  POSTGRES_HOST: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASS: test-pass
  POSTGRES_DB: testdb

stages:
  - test
  - build

run_tests:
  stage: test
  image: node:8
  services:
    - postgres:10.6
    - mongo:4.0.4
    - redis:5.0-alpine
  script:
    - export NODE_ENV=development
    - npm install
    - npm run build
    - export MONGO_CONN=mongodb://mongo/testdb 
    - export POSTGRES_CONN=postgres://$POSTGRES_USER:$POSTGRES_PASS@$POSTGRES_HOST/$POSTGRES_DB 
    - export REDIS_CONN=redis://redis/
    - export NODE_ENV=test 
    - export OPEN_STREET_MAP_API_URL_SEARCH=$OPEN_STREET_MAP_API_URL_SEARCH
    - export OPEN_STREET_MAP_API_URL_REVERSE=$OPEN_STREET_MAP_API_URL_REVERSE 
    - npm run code-coverage

registry_deployment:
  stage: build
  script:
    - echo $CI_COMMIT_SHA > commitsha
    - docker build --build-arg NODE_ENV=production -t $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:latest && docker push $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
  only:
    variables:
      - $CI_COMMIT_REF_NAME == "master"
      - $DOCKER_REGISTRY == "true"
