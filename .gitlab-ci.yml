variables:
  DOCKER_REGISTRY_URL: gitlab.oict.cz:4567
  CONTAINER_IMAGE: $DOCKER_REGISTRY_URL/$CI_PROJECT_PATH
  MONGO_CONN: mongodb://localhost/$CI_PROJECT_NAME-$CI_PIPELINE_ID

stages:
  - build
  - test
  - deploy
  - clean

build_image:
  stage: build
  script:
    - echo $CI_COMMIT_SHA > commitsha
    - docker build -t $CONTAINER_IMAGE:latest -t $CONTAINER_IMAGE:$CI_PIPELINE_ID .

run_tests:
  stage: test
  script:
    - echo "Mongo $MONGO_CONN"
    - mongo $MONGO_CONN --eval 'db.cicd.insert({"isRunning":"yes"});'
    - docker run -e MONGO_CONN=$MONGO_CONN $CONTAINER_IMAGE echo $MONGO_CONN; mongo $MONGO_CONN --eval 'db.cicd.insert({"isRunning":"yes"});'
    - curl --silent ifconfig.co
    - echo "$TEST_SECRETS_DATASOURCES_JS" > ${PWD}/datasources.js
    - cat ${PWD}/datasources.js
    - docker run -v ${PWD}/datasources.js:/home/node/app/src/config/datasources.js:ro -e MONGO_CONN=$MONGO_CONN -e NODE_ENV=test -e OPEN_STREET_MAP_API_URL=$OPEN_STREET_MAP_API_URL $CONTAINER_IMAGE npm run code-coverage

registry_deployment:
  stage: deploy
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $DOCKER_REGISTRY_URL
    - docker push $CONTAINER_IMAGE:latest && docker push $CONTAINER_IMAGE:$CI_PIPELINE_ID
    - docker logout $DOCKER_REGISTRY_URL
  only:
    variables:
      - $CI_COMMIT_REF_NAME == "master"
      - $DOCKER_REGISTRY == "true"

remove_images:
  stage: clean
  script:
    - docker rmi -f $CONTAINER_IMAGE:$CI_PIPELINE_ID
  when: always
