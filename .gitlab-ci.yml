variables:
  MONGO_CONN: mongodb://runner-mongo-test/$CI_PROJECT_NAME-$CI_PIPELINE_ID

stages:
  - build
  - test
  - deploy
  - clean

build_image:
  stage: build
  script:
    - echo $CI_COMMIT_SHA > commitsha
    - docker build -t $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID .

run_tests:
  stage: test
  script:
    - curl --silent ifconfig.co
    - docker run --net testnet -e MONGO_CONN=$MONGO_CONN -e POSTGRES_CONN=$POSTGRES_CONN -e REDIS_CONN=$REDIS_CONN -e NODE_ENV=test -e OPEN_STREET_MAP_API_URL_SEARCH=$OPEN_STREET_MAP_API_URL_SEARCH -e OPEN_STREET_MAP_API_URL_REVERSE=$OPEN_STREET_MAP_API_URL_REVERSE -e MOJEPRAHA_ENDPOINT_APIKEY=$MOJEPRAHA_ENDPOINT_APIKEY $CI_REGISTRY_IMAGE npm run code-coverage

registry_deployment:
  stage: deploy
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:latest && docker push $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
    - docker logout $CI_REGISTRY
  only:
    variables:
      - $CI_COMMIT_REF_NAME == "master"
      - $DOCKER_REGISTRY == "true"

remove_images:
  stage: clean
  script:
    - docker rmi -f $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
  when: always
